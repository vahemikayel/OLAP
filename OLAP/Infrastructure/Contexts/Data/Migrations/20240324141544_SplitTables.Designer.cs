// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OLAP.API.Infrastructure.Contexts.Data;

#nullable disable

namespace OLAP.API.Infrastructure.Contexts.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240324141544_SplitTables")]
    partial class SplitTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Data")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OLAP.API.Models.Entity.Data.CountryEModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Countries", "Data");
                });

            modelBuilder.Entity("OLAP.API.Models.Entity.Data.DataEModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasMaxLength(10)
                        .HasColumnType("date");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("IndicatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("IndicatorId");

                    b.ToTable("Data", "Data");
                });

            modelBuilder.Entity("OLAP.API.Models.Entity.Data.IndicatorEModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IndicatorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndicatorName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Indicators", "Data");
                });

            modelBuilder.Entity("OLAP.API.Models.Entity.Data.DataEModel", b =>
                {
                    b.HasOne("OLAP.API.Models.Entity.Data.CountryEModel", "Country")
                        .WithMany("DataItems")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OLAP.API.Models.Entity.Data.IndicatorEModel", "Indicator")
                        .WithMany("DataItems")
                        .HasForeignKey("IndicatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Indicator");
                });

            modelBuilder.Entity("OLAP.API.Models.Entity.Data.CountryEModel", b =>
                {
                    b.Navigation("DataItems");
                });

            modelBuilder.Entity("OLAP.API.Models.Entity.Data.IndicatorEModel", b =>
                {
                    b.Navigation("DataItems");
                });
#pragma warning restore 612, 618
        }
    }
}
